version: '3'

services:
  spark-master:
    container_name: spark-master
    hostname: spark-master
    build:
      context: jobs
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "9090:8080"
      - "7077:7077"
    volumes:
      - ./jobs:/opt/bitnami/spark/scripts
      - ./jobs/schema:/opt/bitnami/spark/scripts/schema
    env_file:
      - .env
    depends_on:
      - cassandra
    networks:
      - financial_information

  spark-worker:
    container_name: spark-worker
    hostname: spark-worker
    build:
      context: jobs
      # Explicitly specify Dockerfile for clarity
      dockerfile: Dockerfile 
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
      - cassandra
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 4
      SPARK_WORKER_MEMORY: 2g
      SPARK_MASTER_URL: spark://spark-master:7077
    volumes:
      - ./jobs:/opt/bitnami/spark/scripts
      - ./jobs/schema:/opt/bitnami/spark/scripts/schema
    env_file:
      - .env
    networks:
      - financial_information

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - financial_information

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - financial_information

  finnhub_producer:
    container_name: FinnhubProducer
    build:
      context: finnhub_producer
    restart: always
    env_file:
      - .env
    depends_on:
      - kafka
    networks:
      - financial_information


  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_USER=cassandra
      - CASSANDRA_PASSWORD=cassandra 
    networks:
      - financial_information


  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
    # Grafana UI port
      - "3001:3000" 
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning  
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin  
    depends_on:
      - cassandra
    networks:
      - financial_information

volumes:
  grafana_data:

# volumes:
#   cassandra-data:

networks:
  financial_information:
